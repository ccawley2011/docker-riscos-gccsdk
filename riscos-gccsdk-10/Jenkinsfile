pipeline {
  agent { label 'docker' }
    stages {
      stage('Checkout SVN') {
        steps {
          script {
            def scmVars = checkout([$class: 'SubversionSCM', additionalCredentials: [], excludedCommitMessages: '', excludedRegions: '', excludedRevprop: '', excludedUsers: '', filterChangelog: false, ignoreDirPropChanges: false, includedRegions: '', locations: [[cancelProcessOnExternalsFail: true, credentialsId: '', depthOption: 'infinity', ignoreExternalsOption: false, local: 'autobuilder', remote: 'svn://svn.riscos.info/gccsdk/trunk/autobuilder']], quietOperation: true, workspaceUpdater: [$class: 'UpdateUpdater']])
            svnRevision = scmVars.SVN_REVISION
          }
        }
      }
      stage('Copy artifacts') {
         steps {
             script {
                step ([$class: 'CopyArtifact',
                    projectName: 'gcc-4.7-docker',
                    filter: "gcc4.tar.xz"
                    ]);
            }
        }
      }
      stage('Compile') {
        agent {
          docker {
            image 'riscosdotinfo/riscos-gccsdk-4.7:ci'
            label 'docker'
            reuseNode true
            args '-v /var/run/docker.sock:/var/run/docker.sock -v ${WORKSPACE}:/usr/src/gccsdk -u root:root'
          }
        }
        steps {
           sh 'tar Jxf gcc4.tar.xz'
           sh 'mkdir -p build'
           sh 'rm -f autobuilder/develop/gcc/gcc.dwarf2out.c.p'
           sh 'cp riscos-gccsdk-10/build-setvars build/'
           sh 'cd /home/riscos && ln -s ${WORKSPACE}/gcc4'
           sh 'cd build && ../autobuilder/build -v gcc'
	   sh 'echo "Compile successful"'
        }
      }
//      stage('Docker build') {
//        steps {
//          script {
//            dockerImage = docker.build("riscosdotinfo/riscos-gccsdk-10:ci", "./riscos-gccsdk-10")
//	    docker.withRegistry('https://registry.hub.docker.com', 'dockerHub') {
//              dockerImage.push('ci')
//              dockerImage.push("r${svnRevision}")
//            }
//         }
//	}
//      }
    }

}
